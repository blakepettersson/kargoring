apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: stages
  namespace: argocd
spec:
  ignoreApplicationDifferences:
    - jqPathExpressions:
        - .spec.source.targetRevision
        - .spec.source.helm.parameters
  goTemplate: true
  generators:
    - matrix:
        generators:
          # list generator, 'child' #1
          - list:
              elements:
                - appName: oci-guestbook-dev
                  registry: oci://registry-1.docker.io/blaaake
                  chart: helm-guestbook
          # cluster generator, 'child' #2
          - clusters:
              selector:
                matchExpressions:
                  - key: 'akuity.io/argo-cd-cluster-name'
                    operator: NotIn
                    values:
                    - in-cluster
                    - akuity-kargo-poc
  template:
    metadata:
      name: '{{.appName}}-{{ index .metadata.annotations "stage" }}'
      annotations:
        kargo.akuity.io/authorized-stage: '{{.appName}}:{{ index .metadata.annotations "stage" }}'
    spec:
      project: kargo-demo
      source:
        repoURL: '{{.registry}}'
        chart: '{{.chart}}'
        # Kargo will update targetRevision to move new charts into each stage
        targetRevision: 0.1.0 # Initial value needs to exist in remote repo, subsequent revisions will be handled by Kargo.
        helm:
          valueFiles:
            - 'values-{{ index .metadata.annotations "stage" }}.yaml' # This is a values file that is _baked into_ the OCI Helm chart.
          parameters:
            # Kargo will update this value to move new images into each stage
            - name: image.tag
              value: placeholder
      destination:
        name: '{{.name}}'
        namespace: '{{.appName}}'
      # Autosync NOT enabled for application stages, since the syncing is managed via Kargo.
      syncPolicy:
        syncOptions:
          - CreateNamespace=true